#pragma once
#include "STUCoreTypes.generated.h"

//----------------WEAPON------------------

class ASTUBaseWeapon;

//делегат, который будет оповещать WeaponComponent о том, что у нас закончились патроны:
DECLARE_MULTICAST_DELEGATE(FOnClipEmptySignature);

// структура для патронов
USTRUCT(BlueprintType)
struct FAmmoData
{
    GENERATED_USTRUCT_BODY()

    UPROPERTY(EditDefaultsOnly, BlueprintReadWrite, Category = "Weapon")
    int32 Bullets;

    UPROPERTY(EditDefaultsOnly, BlueprintReadWrite, Category = "Weapon", meta = (EditCondition = "!Infinite"))
    int32 Clips;

    UPROPERTY(EditDefaultsOnly, BlueprintReadWrite, Category = "Weapon")
    bool Infinite; // конечен ли арсенал
};

// тут мы будем хранить класс оружия и анимацию перезарядки для данного оружия
USTRUCT(BlueprintType)
struct FWeaponData
{
    GENERATED_USTRUCT_BODY()

    UPROPERTY(EditDefaultsOnly, BlueprintReadWrite, Category = "Weapon")
    TSubclassOf<ASTUBaseWeapon> WeaponClass;

    UPROPERTY(EditDefaultsOnly, BlueprintReadWrite, Category = "Weapon")
    UAnimMontage* ReloadAnimMontage;
};

//----------------HEALTH------------------

//Объявляем делегат о том, умер ли наш персонаж (будет доступен только в С++)
DECLARE_MULTICAST_DELEGATE(FOnDeathSignature);

DECLARE_MULTICAST_DELEGATE_OneParam(FOnHealthChangedSignature, float);